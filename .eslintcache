[{"C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\index.js":"1","C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\App.js":"2","C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\reportWebVitals.js":"3","C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\selector\\profiles.js":"4","C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\hooks\\useFetch.js":"5","C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\components\\profiles.js":"6","C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\components\\pagination.js":"7","C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\actions\\Filter.js":"8","C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\store\\store.js":"9","C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\reducer\\filter.js":"10","C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\components\\LoadingNow.js":"11"},{"size":669,"mtime":1612727340843,"results":"12","hashOfConfig":"13"},{"size":1593,"mtime":1612729257533,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1612706042700,"results":"15","hashOfConfig":"13"},{"size":980,"mtime":1612727087382,"results":"16","hashOfConfig":"13"},{"size":833,"mtime":1612709545386,"results":"17","hashOfConfig":"13"},{"size":6868,"mtime":1612727222537,"results":"18","hashOfConfig":"13"},{"size":1060,"mtime":1612727222523,"results":"19","hashOfConfig":"13"},{"size":600,"mtime":1612727087589,"results":"20","hashOfConfig":"13"},{"size":328,"mtime":1612727087285,"results":"21","hashOfConfig":"13"},{"size":728,"mtime":1612727087505,"results":"22","hashOfConfig":"13"},{"size":1888,"mtime":1612728180831,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"emjoqr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\index.js",[],["52","53"],"C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\App.js",["54","55","56","57","58","59","60","61"],"C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\selector\\profiles.js",["62","63"],"export default (profiles, { userName, gender, creditType, paymentMethodType }) => {\r\n  return profiles\r\n    .filter((profile) => {\r\n\r\n      const genderMatch = gender!= \"\" ?  profile.Gender\r\n        .toLowerCase() === gender.toLowerCase() : profile.Gender\r\n        .toLowerCase()\r\n        .includes(gender.toLowerCase()); \r\n\r\n        const creditTypeMatch = profile.CreditCardType\r\n        .toLowerCase()\r\n        .includes(creditType.toLowerCase());\r\n      \r\n      const userNameMatch = profile.UserName\r\n        .toLowerCase()\r\n        .includes(userName.toLowerCase());\r\n\r\n      const paymentMethodMatch = profile.PaymentMethod\r\n        .toLowerCase()\r\n        .includes(paymentMethodType.toLowerCase());\r\n\r\n        // const paymentMethodMatch = profile.PaymentMethod\r\n        // .toLowerCase()\r\n        // .includes(PaymentMethod.toLowerCase());\r\n\r\n      return genderMatch &&  userNameMatch && creditTypeMatch && paymentMethodMatch;\r\n      //&& paymentMethodMatch\r\n    })\r\n};","C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\hooks\\useFetch.js",[],"C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\components\\profiles.js",["64","65"],"import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {filterRecordByGender, filterRecordByUsername, filterRecordByPaymentMethod} from \"../actions/Filter\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n    minWidth: 700,\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nexport default function CustomizedTables({profiles}){\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  // Handle Text search input filterRecordByUsername\r\n  const searchTextHandle = (event) => {\r\n    dispatch(filterRecordByUsername(event.target.value));\r\n  }\r\n\r\n  // handle gender change here\r\n    const changeGenderHandle = (event) => {\r\n      dispatch(filterRecordByGender(event.target.value));\r\n    }\r\n\r\n  // handle payment method change here filterRecordByPaymentMethod\r\n    const changePaymentMethodHandle = (event) => {\r\n      dispatch(filterRecordByPaymentMethod(event.target.value));\r\n    }\r\n\r\n    const filters = useSelector(state => state.filters)\r\n\r\n    return (\r\n        <div className={classes.root} style={{paddingLeft: \"5%\",  paddingRight: \"5%\", paddingTop: \"50px\", paddingBottom: \"50px\"}} >\r\n        <Grid container spacing={3}>\r\n        {/* sorting and search criteria will be shwon here */}\r\n          <Grid item md={6} xs={12} sm={6}>\r\n            <Paper className={classes.paper}>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                  <TextField id=\"standard-basic\" label=\"Search By Username\"  onChange={searchTextHandle}/>\r\n                </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Paper className={classes.paper}>\r\n                  <InputLabel htmlFor=\"age-native-simple\">Gender</InputLabel>\r\n                  <Select\r\n                    native\r\n                    onChange={changeGenderHandle}\r\n                >\r\n                <option aria-label=\"None\" value=\"\" />\r\n                  <option value={\"male\"}>Male</option>\r\n                  <option value={\"female\"}>Female</option>\r\n                  <option value={\"Prefer to skip\"}>Prefer to skip</option>\r\n                </Select>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Paper className={classes.paper}>\r\n                <InputLabel htmlFor=\"age-native-simple\">Payment Method</InputLabel>\r\n                  <Select\r\n                    native\r\n                    onChange={changePaymentMethodHandle}\r\n                >\r\n                    <option aria-label=\"None\" value=\"Select Payment Method\" />\r\n                  <option value=\"\">All</option>\r\n                    <option value={\"cc\"}>CC</option>\r\n                    <option value={\"check\"}>Check</option>\r\n                    <option value={\"paypal\"}>Paypal</option>\r\n                    <option value={\"money order\"}>Money Order</option>\r\n\r\n                </Select>\r\n            </Paper>\r\n          </Grid>\r\n          {/* table data will be shown here */}\r\n          <Grid item xs={12}>\r\n            \r\n              <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <StyledTableCell>FullName</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">UserName</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">Gender</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">Email</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">PhoneNumber</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">Payment Method</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">DomainName</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">URL</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">Longitude</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">Latitude</StyledTableCell>\r\n                      <StyledTableCell align=\"left\">LastLogin</StyledTableCell>\r\n                      {/* <StyledTableCell align=\"right\">Protein&nbsp;(g)</StyledTableCell> */}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {profiles.map((row) => (\r\n                      <StyledTableRow key={row.UserName}>\r\n                        <StyledTableCell align=\"left\">{row.FirstName + row.LastName}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{row.UserName}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{row.Gender}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{row.Email}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{row.PhoneNumber}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{row.PaymentMethod}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{row.DomainName}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{row.URL}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{row.Longitude}</StyledTableCell>  \r\n                        <StyledTableCell align=\"left\">{row.Latitude}</StyledTableCell>\r\n                        <StyledTableCell align=\"left\">{row.LastLogin}</StyledTableCell>\r\n                        \r\n                      </StyledTableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n          \r\n          </Grid>\r\n        \r\n        </Grid>\r\n      </div>\r\n    );\r\n}\r\n","C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\components\\pagination.js",[],"C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\actions\\Filter.js",[],"C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\store\\store.js",["66"],"import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport filterReducer from \"../reducer/filter\"\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n        filters: filterReducer\r\n    }),\r\n    applyMiddleware(thunk)\r\n  );\r\n\r\n  return store;\r\n};","C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\reducer\\filter.js",["67"],"const expensesFilterDefaultState = {\r\n  userName: \"\",\r\n  gender: \"\",\r\n  creditType: \"\",\r\n  paymentMethodType: \"\",\r\n};\r\n\r\nexport default (state = expensesFilterDefaultState, action) => {\r\n  switch (action.type) {\r\n    case \"FILTER_USERNAME\":\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n      };\r\n    case \"FILTER_GENDER\":\r\n      return {\r\n        ...state,\r\n        gender: action.gender,\r\n      };\r\n     case \"FILTER_CREDIT_CARD_TYPE\":\r\n      return {\r\n        ...state,\r\n        creditType: action.creditType,\r\n      };\r\n    case \"FILTER_PAYMENT_METHOD\":\r\n      return {\r\n        ...state,\r\n        paymentMethodType: action.paymentMethodType,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\DELL\\Documents\\ReactApps\\profiles\\src\\components\\LoadingNow.js",["68"],"import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: '#1a90ff',\r\n  },\r\n}))(LinearProgress);\r\n\r\n// Inspired by the former Facebook spinners.\r\nconst useStylesFacebook = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'relative',\r\n  },\r\n  bottom: {\r\n    color: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\r\n  },\r\n  top: {\r\n    color: '#1a90ff',\r\n    animationDuration: '550ms',\r\n    position: 'absolute',\r\n    left: '43%',\r\n  },\r\n  circle: {\r\n    strokeLinecap: 'round',\r\n  },\r\n}));\r\n\r\nfunction FacebookCircularProgress(props) {\r\n  const classes = useStylesFacebook();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        className={classes.bottom}\r\n        size={40}\r\n        thickness={4}\r\n        {...props}\r\n        value={100}\r\n      />\r\n      <CircularProgress\r\n        variant=\"indeterminate\"\r\n        disableShrink\r\n        className={classes.top}\r\n        classes={{\r\n          circle: classes.circle,\r\n        }}\r\n        size={40}\r\n        thickness={4}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nexport default function Loader() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FacebookCircularProgress />\r\n      {/* <br />\r\n      <BorderLinearProgress variant=\"determinate\" value={50} /> */}\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":9,"nodeType":"75","messageId":"76","endLine":1,"endColumn":18},{"ruleId":"73","severity":1,"message":"77","line":2,"column":22,"nodeType":"75","messageId":"76","endLine":2,"endColumn":33},{"ruleId":"73","severity":1,"message":"78","line":11,"column":16,"nodeType":"75","messageId":"76","endLine":11,"endColumn":23},{"ruleId":"73","severity":1,"message":"79","line":11,"column":25,"nodeType":"75","messageId":"76","endLine":11,"endColumn":28},{"ruleId":"73","severity":1,"message":"80","line":12,"column":10,"nodeType":"75","messageId":"76","endLine":12,"endColumn":17},{"ruleId":"73","severity":1,"message":"81","line":12,"column":19,"nodeType":"75","messageId":"76","endLine":12,"endColumn":29},{"ruleId":"73","severity":1,"message":"82","line":13,"column":23,"nodeType":"75","messageId":"76","endLine":13,"endColumn":37},{"ruleId":"73","severity":1,"message":"83","line":14,"column":27,"nodeType":"75","messageId":"76","endLine":14,"endColumn":45},{"ruleId":"84","severity":1,"message":"85","line":1,"column":1,"nodeType":"86","endLine":29,"endColumn":3},{"ruleId":"87","severity":1,"message":"88","line":5,"column":33,"nodeType":"89","messageId":"90","endLine":5,"endColumn":35},{"ruleId":"73","severity":1,"message":"91","line":15,"column":8,"nodeType":"75","messageId":"76","endLine":15,"endColumn":20},{"ruleId":"73","severity":1,"message":"92","line":70,"column":11,"nodeType":"75","messageId":"76","endLine":70,"endColumn":18},{"ruleId":"84","severity":1,"message":"85","line":5,"column":1,"nodeType":"86","endLine":14,"endColumn":3},{"ruleId":"84","severity":1,"message":"85","line":8,"column":1,"nodeType":"86","endLine":33,"endColumn":3},{"ruleId":"73","severity":1,"message":"93","line":6,"column":7,"nodeType":"75","messageId":"76","endLine":6,"endColumn":27},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'loading' is assigned a value but never used.","'err' is assigned a value but never used.","'datapro' is assigned a value but never used.","'setdatapro' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","'setProfilesPerPage' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'NativeSelect' is defined but never used.","'filters' is assigned a value but never used.","'BorderLinearProgress' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]